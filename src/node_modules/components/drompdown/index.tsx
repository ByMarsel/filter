import * as React from "react";
import styled from "styled-components";
import { SelectedValue } from "types";

const SelectList = styled.ul`
  padding: 0;
  margin: 0;
  position: relative;
  height: 50px;
  width: 150px;
  list-style-type: none;
  border-radius: 3px;
  border: 1px solid grey;
  cursor: pointer;
`;

const Option = styled.li`
  padding: 0;
  margin: 0;
  width: 100%;
  min-height: 50px;
  &:hover {
    background-color: #008b8b;
  }
`;

const Header = styled.div`
  width: 100%;
  height: 50px;
`;

const OptionsWrap = styled.div`
  position: absolute;
  width: 100%;
  border-left: 1px solid grey;
  border-right: 1px solid grey;
  border-bottom: 1px solid grey;
  border-radius: 0 0 3px 3px;
  z-index: 100;
  background-color: white;
  box-sizing: border-box;
`;

interface Props {
  values: SelectedValue[];
  onSelect: (item: SelectedValue | undefined) => void;
  selected?: SelectedValue;
  defaultValueLabel: string;
}

interface State {
  open: boolean;
}

class Dropdown extends React.Component<Props, State> {
  constructor(props: Props) {
    super(props);
    this.state = {
      open: false
    };
  }
  public render() {
    return (
      <SelectList onClick={this.onClickDropdown}>
        <Header>
          {this.props.selected
            ? this.props.selected.label
            : this.props.defaultValueLabel}
        </Header>
        {this.state.open && (
          <OptionsWrap>
            {this.props.values
              .filter(x => x !== this.props.selected)
              .map(x => {
                const func = this.handleSelectItem(x);
                return (
                  <Option onClick={func} key={x.id}>
                    {x.label}
                  </Option>
                );
              })}
            <Option onClick={this.handleSelectAll}>
              {this.props.defaultValueLabel}
            </Option>
          </OptionsWrap>
        )}
      </SelectList>
    );
  }

  private handleSelectAll = () => {
    this.props.onSelect(undefined);
  };

  private handleSelectItem = (x: any) => {
    const { onSelect } = this.props;
    return () => onSelect(x);
  };

  private onClickDropdown = () => {
    this.setState({ open: !this.state.open });
  };
}

export default Dropdown;
